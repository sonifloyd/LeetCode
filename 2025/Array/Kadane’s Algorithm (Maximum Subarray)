Given an integer array nums, find the contiguous subarray (containing at least one number) 
which has the largest sum and return its sum.
Example:
Input:  [-2, 1, -3, 4, -1, 2, 1, -5, 4]
Output: 6
Explanation: The subarray [4, -1, 2, 1] has the largest sum = 6


---------------------------------
public int maxSubArray(int[] nums) {
    int currentSum = 0;
    int maxSum = nums[0]; // initialize with first element
    
    for (int num : nums) {
        currentSum += num;
        if (currentSum > maxSum) {
            maxSum = currentSum;
        }
        if (currentSum < 0) {
            currentSum = 0;
        }
    }
    return maxSum;
}

Time Complexity
O(n) — Only one pass through the array

Space Complexity
O(1) — No extra space



